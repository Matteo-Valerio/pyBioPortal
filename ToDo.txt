1. Controllare i parametri e i commenti che li descrivono:

per es se un parametro è impostato come valore predefinito su None mettere il check, se invece è presente no
if chromosome:
        params["chromosome"] = chromosome
if sortBy:
    params["sortBy"] = sortBy --> sarebbe da togliere perchè ha giaà un valore predefinito nella funzione

2. Verificare nei commenti che i parametri che hanno una lista di possibili voci abbiano specificato il valoe di default tutti allo stesso modo per uniformità

:param projection: Level of detail of the response.
    - "DETAILED": Detailed information.
    - "ID": Information with only IDs.
    - "META": Metadata information.
    - "SUMMARY": Summary information (default).
:type projection: str, optional, default: "SUMMARY" --> default: "SUMMARY" va tolto è già specificat nella riga precedente

3. Capire come visualizzare i commenti in docstring in modo chiaro producendo della documentazione da mettere su github

4. Nota: quando si applicano dei filtri con delle liste di dizionari in cui alcuni parametri possono essere applicati
         in modo comibinato, se qualcuno di essi non viene impostato verrano generati degli errori che indicano la
         mancanza di parametri o la presenza di parametri in più del necessario, riportando dei messaggi di errore come questo:
         Error messagge: interceptedStudyViewFilter must be true --> nel filtro c'è qualcosa che manca o è di troppo per
                                                                     risolevere il problema bisogna ragionare in modo logico

5. verificare che nella chiamata della funzione requests.post i parametri siano passati sempre in questo ordine:
   f"{base_url}{endpoint}", params=params, json=study_view_filter

6. Nella descrizione del package specificare che i metodi fetch... sono relativi alle richieste post mentre i metodi get...
   sono relativi alle richieste get.                                                                        

